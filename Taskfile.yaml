version: "3"

vars:
  IMAGES:
    - 'python:3.11'
    - 'node:20'
    - 'neo4j:enterprise'
    - 'elasticsearch:8.15.0'
    - 'tensorflow/tensorflow:2.17.0-gpu'
    - 'nvidia/cuda:12.5.1-cudnn-devel-ubuntu20.04'

  SIZES:
    - 50
    - 100
    - 200
    - 300

tasks:
  download-all-images:
    cmds:
      - rm -rf oci/original-zstd/ || true
      - for: { var: IMAGES }
        task: download-image
        vars:
          IMAGE: "{{ .ITEM }}"

  download-image:
    requires:
      vars: [ IMAGE ]
    cmds:
      - mkdir -p oci/original/ oci/original-zstd/
      - echo {{.IMAGE}}
      - skopeo --override-arch=arm64 --override-os=linux copy docker://{{.IMAGE}} oci:oci/original/{{.IMAGE| replace "/" "-" | replace ":" "-"}} --image-parallel-copies=10
      - skopeo --override-arch=arm64 --override-os=linux copy oci:oci/original/{{.IMAGE| replace "/" "-" | replace ":" "-"}} oci:oci/original-zstd/{{.IMAGE| replace "/" "-" | replace ":" "-"}} --image-parallel-copies=10 --dest-compress --dest-compress-format=zstd --dest-compress-level=9

  compress-all-images:
    cmds:
      - rm compress.log || true
      - rm -rf oci/repacked/ || true
      - mkdir -p oci/repacked
      - cargo build --profile=lto
      - for: { var: IMAGES }
        task: compress-image
        vars:
          IMAGE: '{{.ITEM| replace "/" "-" | replace ":" "-"}}'

  compress-image:
    requires:
      vars: [IMAGE]
    cmds:
      - for: { var: SIZES }
        cmd: cargo run --quiet --profile=lto -- --compression-level=9 --target-size={{.ITEM}}MiB --exclude='*.pyc' oci/original/{{.IMAGE}}/ oci/repacked/{{.IMAGE}}/{{.ITEM}}/ >> compress.log

  upload-all-images:
    cmds:
      - for: { var: IMAGES }
        task: upload-image
        vars:
          IMAGE: '{{.ITEM| replace "/" "-" | replace ":" "-"}}'

  upload-image:
    requires:
      vars: [ IMAGE ]
    cmds:
      - skopeo copy oci:oci/original/{{.IMAGE}}/ docker://orfal/docker-repack:{{.IMAGE}}-original-gzip --image-parallel-copies=10
      - skopeo copy oci:oci/original-zstd/{{.IMAGE}}/ docker://orfal/docker-repack:{{.IMAGE}}-original-zstd --image-parallel-copies=10
      - for: { var: SIZES }
        cmd: skopeo copy oci:oci/repacked/{{.IMAGE}}/{{.ITEM}}/ docker://orfal/docker-repack:{{.IMAGE}}-repacked-{{.ITEM}} --image-parallel-copies=10

  print-images:
    cmds:
      - for: { var: IMAGES }
        task: print-image
        vars:
          IMAGE: '{{.ITEM| replace "/" "-" | replace ":" "-"}}'

  print-image:
    requires:
      vars: [ IMAGE ]
    cmds:
      - echo orfal/docker-repack:{{.IMAGE}}-original-gzip
      - echo orfal/docker-repack:{{.IMAGE}}-original-zstd
      - for: { var: SIZES }
        cmd: echo orfal/docker-repack:{{.IMAGE}}-repacked-{{.ITEM}}
