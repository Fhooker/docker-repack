name: 'Repack Image Benchmark'
description: 'Repack an image for benchmarking'
inputs:
  upstream-image:
    required: true
  target-size:
    required: true
  output:
    required: false
    default: 'repacked'
outputs:
  image-reference-ghcr:
    description: "pushed image reference - ghcr"
    value: ${{ steps.push.outputs.image-reference-ghcr }}
  image-reference-dockerhub:
    description: "pushed image reference - dockerhub"
    value: ${{ steps.push.outputs.image-reference-dockerhub }}
runs:
  using: "composite"
  steps:
    - name: Repack
      id: repack
      run: |
        ./docker-repack "docker://ghcr.io/${{ github.repository }}/demo:${{ steps.tag.outputs.tag }}" "oci://${{ env.OUTPUT_DIR }}" --target-size="${{ inputs.target-size }}" --platform=linux/amd64
        echo "output-dir=${{ env.OUTPUT_DIR }}" >> $GITHUB_OUTPUT
      shell: bash
      env:
        OUTPUT_DIR: "${{ inputs.output }}/${{ inputs.target-size }}/"

    - name: Copy image
      run: skopeo copy --all --image-parallel-copies=10 --retry-times=3 "${{ env.source }}" "${{ env.dest }}"
      shell: bash
      env:
        source: 'oci:${{ steps.repack.outputs.output-dir }}'
        dest: docker://ghcr.io/${{ github.repository }}/demo:${{ inputs.tag }}-${{ inputs.target-size }}

    - name: Cleanup
      run: rm -rf "${{ steps.repack.outputs.output-dir }}"
      shell: bash
