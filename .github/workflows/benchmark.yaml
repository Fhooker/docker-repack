name: Benchmark

on:
  workflow_dispatch:

jobs:
  benchmark:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: read
      id-token: write

    env:
      RUNS: 25

    steps:
      - uses: actions/checkout@v4
      - name: install skopeo
        uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: lework/skopeo-binary
          tag: v1.16.1
          cache: true
          extension-matching: disable
          rename-to: skopeo
          chmod: 0755

      - name: skopeo version
        run: skopeo --version

      - name: "Skopeo authenticate ghcr.io"
        run: skopeo login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - run: wget -q https://github.com/sharkdp/hyperfine/releases/download/v1.16.1/hyperfine_1.16.1_amd64.deb
      - run: sudo dpkg -i hyperfine_1.16.1_amd64.deb
      - run: hyperfine --version

      - name: images
        uses: mikefarah/yq@v4.44.3
        id: images
        with:
          cmd: yq -o=json '[.upstream_images[].destination] | join(",")' 'benchmark/sources.yaml'

      - name: sizes
        uses: mikefarah/yq@v4.44.3
        id: sizes
        with:
          cmd: yq -r -o=json '.sizes | join(",")' 'benchmark/sources.yaml'

      - name: Run Benchmark
        run: >-
          hyperfine "skopeo copy --image-parallel-copies=10 docker://${{ env.tag_prefix }}:{image}-{type} oci:/dev/shm/image" \
            --warmup 1 \
            -L image ${{ steps.images.outputs.result }} \
            -L type original,${{ steps.sizes.outputs.result }} \
            --prepare "rm -rf /dev/shm/image/" \
            --cleanup "rm -rf /dev/shm/image/" \
            --runs="${{ env.RUNS }}" --export-json=results.json --shell=none
        env:
          tag_prefix: "ghcr.io/${{ github.repository }}/demo"

      - uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: results.json
          retention-days: 5
          if-no-files-found: error
