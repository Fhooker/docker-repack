name: Benchmark

on:
  workflow_dispatch:

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      destinations: ${{ steps.destinations.outputs.result }}
      sizes: ${{ steps.sizes.outputs.result }}
    steps:
      - uses: actions/checkout@v4
      - name: matrix destinations
        uses: mikefarah/yq@v4.44.3
        id: destinations
        with:
          cmd: yq -o=json '[.upstream_images[].destination]' 'benchmark/sources.yaml'
      - name: sizes
        uses: mikefarah/yq@v4.44.3
        id: sizes
        with:
          cmd: yq -r -o=json '.sizes | join(",")' 'benchmark/sources.yaml'

  benchmark:
    runs-on: ubuntu-latest

    needs: [ matrix ]

    permissions:
      contents: read
      packages: read
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        image: ${{ fromJSON(needs.matrix.outputs.destinations) }}

    concurrency:
      group: "benchmark-${{ matrix.image }}"
      cancel-in-progress: false

    env:
      RUNS: 50
      #BENCHMARK_DIR: /dev/shm/image
      BENCHMARK_DIR: /tmp/image

    steps:
      - name: Disk space before
        run: df -h
      - name: Maximize build space
        shell: bash
        run: |
          sudo rm -rf /usr/share/dotnet/* &
          sudo rm -rf /usr/local/lib/android/* &
      - name: Disk space after
        run: df -h

      - uses: actions/checkout@v4
      - name: install skopeo
        uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: lework/skopeo-binary
          tag: v1.16.1
          cache: true
          extension-matching: disable
          rename-to: skopeo
          chmod: 0755

      - name: skopeo version
        run: skopeo --version

      - name: "Skopeo authenticate ghcr.io"
        run: skopeo login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - run: wget -q https://github.com/sharkdp/hyperfine/releases/download/v1.16.1/hyperfine_1.16.1_amd64.deb
      - run: sudo dpkg -i hyperfine_1.16.1_amd64.deb
      - run: hyperfine --version

      - name: Run Benchmark
        run: >-
          hyperfine "skopeo copy --image-parallel-copies=10 docker://${{ env.tag_prefix }}:{image}-{type} oci:${{ env.BENCHMARK_DIR }}" \
            --warmup 1 --show-output \
            -L image ${{ matrix.image }} \
            -L type original,${{ needs.matrix.outputs.sizes }} \
            --prepare "rm -rf ${{ env.BENCHMARK_DIR }}/" \
            --cleanup "rm -rf ${{ env.BENCHMARK_DIR }}/" \
            --runs="${{ env.RUNS }}" --export-json=results-${{ matrix.image }}.json --shell=none
        env:
          tag_prefix: "ghcr.io/${{ github.repository }}/demo"

      - uses: actions/upload-artifact@v4
        with:
          name: benchmark-results-${{ matrix.image }}
          path: results-${{ matrix.image }}.json
          retention-days: 1
          if-no-files-found: error

  create-artifact:
    runs-on: ubuntu-latest
    needs:
      - benchmark
    steps:
      - uses: actions/download-artifact@v4
        with:
          merge-multiple: true
      - run: |
          cat results-*.json | jq ".results[]" | jq -s "{results: .}" > results.json
      - uses: actions/upload-artifact@v4
        with:
          name: benchmark-results
          path: results.json
          retention-days: 5
          if-no-files-found: error
