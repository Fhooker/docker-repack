name: Benchmark

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    outputs:
      upstream_images: ${{ steps.matrix.outputs.upstream_images }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-on-failure: 'false'
          rustflags: '-C target-cpu=native'

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.5

      - name: Build
        run: cargo build --profile=lto
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"

      - run: du -hs target/lto/docker-repack

      - uses: actions/upload-artifact@v4
        with:
          name: cli
          path: target/lto/docker-repack*
          retention-days: 1
          if-no-files-found: error

      - name: Output matrix
        id: matrix
        run: |
          echo "upstream_images=$(cat benchmark/sources.json | jq -rc '.upstream_images')" >> "$GITHUB_OUTPUT"

  repack-image:
    runs-on: ubuntu-latest
    needs: [ build ]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        upstream_image: ${{ fromJSON(needs.build.outputs.upstream_images) }}

    concurrency:
      group: "push-${{ matrix.upstream_image }}"
      cancel-in-progress: false

    env:
      REGISTRY: ghcr.io
      IMAGE_DESTINATION_PREFIX: "ghcr.io/${{ github.repository }}/demo/${{ matrix.upstream_image }}"

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: cli

      - run: chmod +x docker-repack
      - run: ./docker-repack --version

      - name: Disk space before
        run: df -h

      - name: Maximize build space
        shell: bash
        run: |
          sudo rm -rf /usr/share/dotnet/* &
          sudo rm -rf /usr/local/lib/android/* &
          wait
      - name: Disk space after
        run: df -h

      - name: install skopeo
        uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: lework/skopeo-binary
          tag: v1.16.1
          cache: disable
          extension-matching: disable
          rename-to: skopeo
          chmod: 0755

      - name: skopeo version
        run: skopeo --version

      - name: "Skopeo authenticate"
        run: skopeo login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ${{ env.REGISTRY }}

      - name: Copy original - Docker
        run: skopeo copy --all --image-parallel-copies=10 docker://${{ matrix.upstream_image }} oci:original

      - name: Push original - GHCR
        run: |
          skopeo copy --all --image-parallel-copies=10 oci:original "docker://${{ env.IMAGE_DESTINATION_PREFIX }}-original"

      - id: 25mb
        uses: ./.github/actions/repack-image-benchmark
        with:
          target-size: '25MB'
          image-push-prefix: ${{ env.IMAGE_DESTINATION_PREFIX }}
#
#      - name: 25mb repack
#        run: |
#          ./docker-repack oci://original/ repacked/25/ --target-size=25MB
#          skopeo copy --all --image-parallel-copies=10 oci:repacked/25/ "docker://${{ env.IMAGE_DESTINATION_PREFIX }}-repacked-25mb"
#          rm -rf repacked/25/
#
#      - name: 50mb repack
#        run: |
#          ./docker-repack oci://original/ repacked/50/ --target-size=50MB
#          skopeo copy --all --image-parallel-copies=10 oci:repacked/50/ "docker://${{ env.IMAGE_DESTINATION_PREFIX }}-repacked-50mb"
#          rm -rf repacked/50/
#
#      - name: 100mb repack
#        run: |
#          ./docker-repack oci://original/ repacked/100/ --target-size=100MB
#          skopeo copy --all --image-parallel-copies=10 oci:repacked/100/ "docker://${{ env.IMAGE_DESTINATION_PREFIX }}-repacked-100mb"
#          rm -rf repacked/100/
#
#      - name: 200mb repack
#        run: |
#          ./docker-repack oci://original/ repacked/200/ --target-size=200MB
#          skopeo copy --all --image-parallel-copies=10 oci:repacked/200/ "docker://${{ env.IMAGE_DESTINATION_PREFIX }}-repacked-200mb"
#          rm -rf repacked/200/
#
#

#      - uses: actions/upload-artifact@v4
#        with:
#          name: cli
#          path: target/lto/docker-repack*
#          retention-days: 1
#          if-no-files-found: error