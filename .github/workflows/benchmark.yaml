name: Benchmark

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build-matrix:
    runs-on: ubuntu-latest

    outputs:
      upstream_images: ${{ steps.matrix.outputs.upstream_images }}

    steps:
      - uses: actions/checkout@v4

      - name: Output matrix
        id: matrix
        run: |
          echo "upstream_images=$(cat benchmark/sources.json | jq -rc '.upstream_images')" >> "$GITHUB_OUTPUT"

  time-pull:
    runs-on: ubuntu-latest
    needs: build-matrix

    permissions:
      contents: read
      packages: read
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        upstream_image: ${{ fromJSON(needs.build-matrix.outputs.upstream_images) }}
        tag: ['original', '25MB', '50MB', '100MB', '200MB']

    steps:
      - name: install skopeo
        uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: lework/skopeo-binary
          tag: v1.16.1
          cache: true
          extension-matching: disable
          rename-to: skopeo
          chmod: 0755

      - name: skopeo version
        run: skopeo --version

      - name: "Skopeo authenticate ghcr.io"
        run: skopeo login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - name: Run Benchmark
        shell: zsh
        run: |
          TAG="$(echo "${{ matrix.upstream_image }}" | tr '/' '-' | tr ':' '-')-${{ matrix.tag }}"
          echo $TAG
          skopeo copy --all --image-parallel-copies=10 --retry-times=3 "docker://${{ env.REPO }}:${TAG}" oci:/dev/shm/image
        with:
          REPO: ghcr.io/${{ github.repository }}/docker-repack-demo
