name: Repack image

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-on-failure: 'false'
          rustflags: '-C target-cpu=native'

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.5

      - name: Build
        run: cargo build --profile=lto
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"

      - run: du -hs target/lto/docker-repack

      - uses: actions/upload-artifact@v4
        with:
          name: cli
          path: target/lto/docker-repack*
          retention-days: 1
          if-no-files-found: error

  repack-image:
    runs-on: ubuntu-latest
    needs: [ build ]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        target_image: [
          "python:3.12",
          "nvidia/cuda:12.5.1-cudnn-devel-ubuntu20.04",
          "tensorflow/tensorflow:2.17.0-gpu",
          "neo4j:enterprise",
          "elasticsearch:8.15.0",
          "solr:9.5",
          "spark:python3-java17",
          "storm:2.6",
          "flink:1.20-java8",
          "wordpress:6-php8.1-apache",
        ]

    concurrency:
      group: "push-${{ matrix.target_image }}"
      cancel-in-progress: false

    env:
      REGISTRY: ghcr.io
      IMAGE_PREFIX: ${{ github.repository }}/demo

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: cli

      - run: chmod +x docker-repack
      - run: ./docker-repack --version

      - name: Disk space before
        run: df -h

      - name: Maximize build space
        shell: bash
        run: |
          sudo rm -rf /usr/share/dotnet/* &
          sudo rm -rf /usr/local/lib/android/* &
          wait
      - name: Disk space after
        run: df -h

      - name: install skopeo
        uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: lework/skopeo-binary
          tag: v1.16.1
          cache: disable
          extension-matching: disable
          rename-to: skopeo
          chmod: 0755

      - name: skopeo version
        run: skopeo --version

      - name: "Skopeo authenticate"
        run: skopeo login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ${{ env.REGISTRY }}

      - name: Copy original - GHCR
        run: skopeo copy --all --image-parallel-copies=10 "docker://${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.target_image }}-original" oci:original || true

      - name: Copy original - Docker
        run: skopeo copy --all --image-parallel-copies=10 docker://${{ matrix.target_image }} oci:original

      - name: Push original - GHCR
        run: skopeo copy --all --image-parallel-copies=10 oci:original "docker://${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.target_image }}-original"

      - name: 25mb repack
        run: |
          ./docker-repack oci://original/ repacked/25/ --target-size=25MB
          skopeo copy --all --image-parallel-copies=10 oci:repacked/25/ "docker://${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.target_image }}-repacked-25mb"
          rm -rf repacked/25/

      - name: 50mb repack
        run: |
          ./docker-repack oci://original/ repacked/50/ --target-size=50MB
          skopeo copy --all --image-parallel-copies=10 oci:repacked/50/ "docker://${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.target_image }}-repacked-50mb"
          rm -rf repacked/50/

      - name: 100mb repack
        run: |
          ./docker-repack oci://original/ repacked/100/ --target-size=100MB
          skopeo copy --all --image-parallel-copies=10 oci:repacked/100/ "docker://${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.target_image }}-repacked-100mb"
          rm -rf repacked/100/

      - name: 200mb repack
        run: |
          ./docker-repack oci://original/ repacked/200/ --target-size=200MB
          skopeo copy --all --image-parallel-copies=10 oci:repacked/200/ "docker://${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.target_image }}-repacked-200mb"
          rm -rf repacked/200/
