name: Repack image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/demo
  TARGET_SIZE: "150MB"

concurrency:
  group: "repack"
  cancel-in-progress: true

jobs:
  repack-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1
      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.5

      - name: Build
        run: cargo install --profile=lto --path=. --locked
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"

      - name: install skopeo
        uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: lework/skopeo-binary
          tag: v1.16.1
          cache: enable
          extension-matching: "disable"

      - name: Download image
        run: skopeo copy docker://nvidia/cuda:12.5.1-cudnn-devel-ubuntu20.04 oci:image --dest-compress --dest-compress-format=zstd --dest-compress-level=9

      - name: Repack image
        run: docker-repack image/ repacked/ --target-size=${{ env.TARGET_SIZE }}

      - name: "Skopeo authenticate"
        run: skopeo login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ${{ env.REGISTRY }}

      - name: Copy original zstd
        run: skopeo copy oci:image/ "docker://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:original-gzip-nvidia-cuda-12.5.1"

      - name: Copy original gzip
        run: skopeo copy docker://nvidia/cuda:12.5.1-cudnn-devel-ubuntu20.04 "docker://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:original-gzip-nvidia-cuda-12.5.1"

      - name: Copy repacked
        run: skopeo copy oci:repacked/ "docker://${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:repacked-nvidia-cuda-12.5.1"