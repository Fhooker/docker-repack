name: Repack image

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    concurrency:
      group: "build"
      cancel-in-progress: false

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-on-failure: 'false'

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.5

      - name: Build
        run: cargo build --profile=release
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"

      - uses: actions/upload-artifact@v4
        with:
          name: cli
          path: target/release/docker-repack*
          retention-days: 1

  repack-image:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    concurrency:
      group: "push"
      cancel-in-progress: false

    strategy:
      matrix:
        target_image: ["nvidia/cuda:12.5.1-cudnn-devel-ubuntu20.04"]
        target_size: ["100MB", "200MB"]

    env:
      REGISTRY: ghcr.io
      IMAGE_PREFIX: ${{ github.repository }}/demo

    steps:
      - uses: actions/download-artifact@v4
        with:
          name: cli

      - run: chmod +x docker-repack
      - run: ./docker-repack --version

#      - name: Disk space before
#        run: df -h
#      - name: Maximize build space
#        shell: bash
#        run: |
#          sudo rm -rf /usr/share/dotnet &
#          sudo rm -rf /usr/local/lib/android &
#          sudo rm -rf /opt/ghc &
#          sudo rm -rf /opt/hostedtoolcache/CodeQL &
#          sudo docker image prune --all --force > /dev/null &
#          wait
#      - name: Disk space after
#        run: df -h

      - name: install skopeo
        uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: lework/skopeo-binary
          tag: v1.16.1
          cache: enable
          extension-matching: "disable"

      - name: "Skopeo authenticate"
        run: skopeo login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ${{ env.REGISTRY }}

      - name: Copy original
        run: skopeo copy docker://${{ matrix.target_image }} "docker://${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.target_image }}-original"

#      - name: Repack image
#        run: docker-repack docker://nvidia/cuda:12.5.1-cudnn-devel-ubuntu20.04 repacked/ --target-size=${{ matrix.TARGET_SIZE }}
#
#      - name: Copy repacked
#        run: skopeo copy oci:repacked/ "docker://${{ env.REGISTRY }}/${{ env.IMAGE_PREFIX }}/${{ matrix.target_image }}-repacked-${{ matrix.target_size }}"
