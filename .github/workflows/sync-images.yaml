name: Sync Upstream Images

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  matrix:
    runs-on: ubuntu-latest
    outputs:
      upstream_images: ${{ steps.matrix.outputs.upstream_images }}
    steps:
      - uses: actions/checkout@v4
      - name: Output matrix
        id: matrix
        run: |
          MATRIX="$(cat benchmark/sources.json | jq -rc '.upstream_images')"
          echo "Matrix: ${MATRIX}"
          echo "upstream_images=${MATRIX}" >> "$GITHUB_OUTPUT"

  build:
    runs-on: ubuntu-latest

    env:
      build-profile: 'lto'

    steps:
      - uses: actions/checkout@v4

      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          cache-on-failure: 'false'
          rustflags: '-C target-cpu=native'

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.5

      - name: Build
        run: cargo build --profile=${{ env.build-profile }} -F perf
        env:
          SCCACHE_GHA_ENABLED: "true"
          RUSTC_WRAPPER: "sccache"

      - run: du -hs target/${{ env.build-profile }}/docker-repack

      - uses: actions/upload-artifact@v4
        with:
          name: cli
          path: target/${{ env.build-profile }}/docker-repack*
          retention-days: 1
          if-no-files-found: error
  
  sync-original-images:
    runs-on: ubuntu-latest
    needs: [ matrix ]

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        upstream_image: ${{ fromJSON(needs.matrix.outputs.upstream_images) }}

    concurrency:
      group: "sync-${{ matrix.upstream_image }}"
      cancel-in-progress: false

    steps:
      # Needed for the custom action
      - uses: actions/checkout@v4
      - name: Disk space before
        run: df -h
      - name: Maximize build space
        shell: bash
        run: |
          sudo rm -rf /usr/share/dotnet/* &
          sudo rm -rf /usr/local/lib/android/* &
      - name: Disk space after
        run: df -h

      - name: install skopeo
        uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: lework/skopeo-binary
          tag: v1.16.1
          cache: true
          extension-matching: disable
          rename-to: skopeo
          chmod: 0755

      - name: "Skopeo authenticate ghcr.io"
        run: skopeo login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - name: Download original - Docker
        run: skopeo copy --image-parallel-copies=10 docker://${{ matrix.upstream_image }} oci:original

      - name: Compress with zstd
        run: skopeo copy --image-parallel-copies=10 oci:original dir:original-zstd --dest-compress --dest-compress-format=zstd

      - name: Push zstd image
        id: push-zstd
        uses: ./.github/actions/push-image
        with:
          upstream-image: ${{ matrix.upstream_image }}
          tag-suffix: '-zstd'
          source: 'dir:original-zstd/'

      - name: Push Original image
        id: push-original
        uses: ./.github/actions/push-image
        with:
          upstream-image: ${{ matrix.upstream_image }}
          tag-suffix: '-original'
          source: 'oci:original/'


  repack-image:
    runs-on: ubuntu-latest
    needs: [ sync-original-images, matrix, build ]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        upstream_image: ${{ fromJSON(needs.matrix.outputs.upstream_images) }}
        target_size: ['50MB', '100MB', '200MB', '500MB']

    concurrency:
      group: "push-${{ matrix.upstream_image }}-${{ matrix.target_size }}"
      cancel-in-progress: false

    steps:
      # Needed for the custom action
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: cli

      - run: chmod +x docker-repack
      - run: ./docker-repack --version

      - name: Disk space before
        run: df -h
      - name: Maximize build space
        shell: bash
        run: |
          sudo rm -rf /usr/share/dotnet/* &
          sudo rm -rf /usr/local/lib/android/* &
      - name: Disk space after
        run: df -h

      - name: install skopeo
        uses: jaxxstorm/action-install-gh-release@v1
        with:
          repo: lework/skopeo-binary
          tag: v1.16.1
          cache: true
          extension-matching: disable
          rename-to: skopeo
          chmod: 0755

      - name: "Skopeo authenticate ghcr.io"
        run: skopeo login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - name: repack-${{ matrix.target_size }}
        id: repack
        uses: ./.github/actions/repack-image-benchmark
        with:
          target-size: '${{ matrix.target_size }}'
          upstream-image: '${{ matrix.upstream_image }}'

  sync-images-to-docker:
    runs-on: ubuntu-latest
    needs: [ repack-image, sync-original-images ]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    steps:
      - name: "Skopeo authenticate ghcr.io"
        run: skopeo login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io

      - name: "Skopeo authenticate dockerhub"
        run: skopeo login --username ${{ secrets.DOCKER_HUB_USER }} --password ${{ secrets.DOCKER_HUB_PAT }} docker.io

      - name: Sync images - docker.io
        id: push-dockerhub
        run: |
          skopeo sync --all --retry-times=3 --src docker --dest docker ghcr.io/${{ github.repository }}/demo docker.io/orfal/docker-repack-demo
        shell: bash
